<?php

namespace common\models;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the model class for table "blog".
 *
 * @property integer $id
 * @property string $title
 * @property string $description
 * @property integer $created_at
 * @property integer $updated_at
 * @property string $general_image
 * @property string $author
 * @property integer $views
 */
class Blog extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     *
     */

    public function behaviors()
    {
        return [
            TimestampBehavior::className(),
        ];
    }

    public function scenarios(){
        $scenarios = parent::scenarios();
        $scenarios['step2'] = ['general_image'];

        return $scenarios;
    }


    public static function tableName()
    {
        return 'blog';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title', 'description'], 'required'],
            [['description'], 'string'],
            [['created_at', 'updated_at', 'views'], 'integer'],
            [['title'], 'string', 'max' => 100],
            [['general_image'], 'string', 'max' => 255],
            [['author'], 'string', 'max' => 60],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Title',
            'description' => 'Description',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
            'general_image' => 'General Image',
            'author' => 'Author',
            'views' => 'Views',
        ];
    }

    /**
     * @inheritdoc
     * @return BlogQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new BlogQuery(get_called_class());
    }


    public function getUser()
    {

        return $this->hasOne(User::className(), ['id' =>'author']);
    }


    public function afterValidate()
    {
        parent::afterValidate(); // TODO: Change the autogenerated stub

        $this->author= Yii::$app->user->identity->id;

    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub

        Yii::$app->locator->cache->set('id',$this->id);
    }


}
